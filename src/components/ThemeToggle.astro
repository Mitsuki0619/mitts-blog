<button
  id="theme-toggle"
  aria-label="テーマ切り替え"
  class="p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="icon sun h-5 w-5"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <circle cx="12" cy="12" r="5"></circle>
    <line x1="12" y1="1" x2="12" y2="3"></line>
    <line x1="12" y1="21" x2="12" y2="23"></line>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
    <line x1="1" y1="12" x2="3" y2="12"></line>
    <line x1="21" y1="12" x2="23" y2="12"></line>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
  </svg>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="icon moon h-5 w-5"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
  </svg>
</button>

<style>
  #theme-toggle {
    display: flex;
  }

  .icon {
    transition:
      opacity 0.2s,
      transform 0.2s;
  }

  .sun {
    opacity: 0;
    position: absolute;
  }

  :global(.light) .sun {
    opacity: 1;
    position: static;
  }

  :global(.light) .moon {
    opacity: 0;
    position: absolute;
  }
</style>

<script>
  const themeToggle = document.getElementById("theme-toggle");
  const html = document.documentElement;

  // ローカルストレージからテーマを取得するか、システム設定を使用
  const getTheme = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };

  // テーマを設定する関数
  const setTheme = (theme: string | null) => {
    if (!theme) return;
    html.classList.remove("light", "dark");
    html.classList.add(theme);
    localStorage.setItem("theme", theme);
  };

  // 初期テーマを設定
  setTheme(getTheme());

  // テーマ切り替えボタンのクリックイベント
  themeToggle?.addEventListener("click", () => {
    const currentTheme = html.classList.contains("dark") ? "dark" : "light";
    const newTheme = currentTheme === "dark" ? "light" : "dark";
    setTheme(newTheme);
  });
</script>
